{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext, useCallback, useState } from 'react';\nimport SessionContext from '../context/SessionContext';\nimport getLogin from '../services/getLogin';\nimport sendRegistro from '../services/registro';\nexport default function useSession() {\n  _s();\n\n  const {\n    jwt,\n    setJWT,\n    userLogin,\n    setUserLogin\n  } = useContext(SessionContext);\n  const [msjServer, setMsjServer] = useState(\"\");\n\n  const eliminarSession = () => {\n    setJWT(\"\");\n    window.sessionStorage.removeItem(\"jwt\");\n    window.localStorage.removeItem(\"userLogin\");\n  };\n\n  const logout = useCallback(() => {\n    eliminarSession();\n  });\n  const login = useCallback(({\n    user,\n    password\n  }) => {\n    const respLogin = getLogin({\n      user,\n      password\n    }).then(jsonResponse => {\n      if (jsonResponse && jsonResponse[\"token\"]) {\n        setJWT(jsonResponse[\"token\"]);\n        setUserLogin(jsonResponse[\"user\"]);\n        window.sessionStorage.setItem(\"jwt\", jsonResponse[\"token\"]);\n        window.localStorage.setItem(\"userLogin\", JSON.stringify(jsonResponse[\"user\"]));\n      } else {\n        setMsjServer(jsonResponse[\"error\"]);\n        eliminarSession();\n      }\n    }).catch(err => {\n      console.log(err);\n      eliminarSession();\n    });\n  }, [jwt, setJWT]);\n  const registro = useCallback(({\n    user,\n    nombre,\n    apellido,\n    password\n  }) => {\n    const respLogin = sendRegistro({\n      user,\n      nombre,\n      apellido,\n      password\n    }).then(jsonResponse => {\n      if (jsonResponse[\"error\"]) setMsjServer(jsonResponse[\"error\"]);else setMsjServer(\"Registro Exitoso\");\n    }).catch(err => {\n      setMsjServer(\"Registro fail\");\n    });\n  }, [jwt, setJWT]);\n  return {\n    isLogin: Boolean(jwt),\n    jwt,\n    login,\n    logout,\n    registro,\n    msjServer\n  };\n}\n\n_s(useSession, \"xKZHI1abtBYfsZNEx5j87153xAU=\");","map":{"version":3,"sources":["/Users/josevillalba/Documents/challenge/alibrate/frontend/src/hooks/useSession.js"],"names":["useContext","useCallback","useState","SessionContext","getLogin","sendRegistro","useSession","jwt","setJWT","userLogin","setUserLogin","msjServer","setMsjServer","eliminarSession","window","sessionStorage","removeItem","localStorage","logout","login","user","password","respLogin","then","jsonResponse","setItem","JSON","stringify","catch","err","console","log","registro","nombre","apellido","isLogin","Boolean"],"mappings":"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","sourcesContent":["import {useContext,useCallback,useState} from 'react'\nimport  SessionContext  from '../context/SessionContext'\nimport getLogin from '../services/getLogin';\nimport sendRegistro from '../services/registro'\nexport default function useSession() {\n    const {jwt,setJWT,userLogin,setUserLogin}=useContext(SessionContext);\n    const [msjServer,setMsjServer]=useState(\"\")\n\n\n    const eliminarSession=() => {\n        setJWT(\"\")\n        window.sessionStorage.removeItem(\"jwt\")\n        window.localStorage.removeItem(\"userLogin\")\n\n    }\n    const logout= useCallback( ()=>{\n        eliminarSession()\n    })\n    const login= useCallback( ({user,password})=>{\n        const respLogin=getLogin({user,password})\n        .then(jsonResponse=>{\n            if(jsonResponse && jsonResponse[\"token\"]){\n                setJWT(jsonResponse[\"token\"])\n                setUserLogin(jsonResponse[\"user\"])\n                window.sessionStorage.setItem(\"jwt\",jsonResponse[\"token\"])\n                window.localStorage.setItem(\"userLogin\",JSON.stringify(jsonResponse[\"user\"]))\n            }else{\n                setMsjServer(jsonResponse[\"error\"])\n                eliminarSession()\n            }\n        })\n        .catch(err=>{\n            console.log(err)\n            eliminarSession()\n\n        })\n     \n    },[jwt,setJWT])\n\n    const registro= useCallback( ({user,nombre,apellido,password})=>{\n        const respLogin=sendRegistro({user,nombre,apellido,password})\n        .then(jsonResponse=>{\n            if(jsonResponse[\"error\"])\n                setMsjServer(jsonResponse[\"error\"])\n            else  \n                setMsjServer(\"Registro Exitoso\")\n            \n        })\n        .catch(err=>{\n            setMsjServer(\"Registro fail\")\n        })\n     \n    },[jwt,setJWT])\n    return {\n        isLogin:Boolean(jwt),\n        jwt,\n        login,\n        logout,\n        registro,\n        msjServer\n\n\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}