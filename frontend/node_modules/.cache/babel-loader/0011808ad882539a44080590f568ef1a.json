{"ast":null,"code":"import setting from './settings';\nexport default function getLogin({\n  user,\n  password\n}) {\n  const {\n    urlApi\n  } = setting;\n  let body = {\n    \"username\": user,\n    password\n  };\n  console.log(body);\n  return fetch(`${urlApi}/apiUser/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(body)\n  }).then(res => res.json()).then(response => {\n    return response;\n  });\n  /* .then( response => {\n      console.log(response)\n      const {data,meta}= response\n      let newGif=[]\n      if(meta && meta.status  && meta.status === 200  && data.length )\n          newGif= data.map(item=> {return {\"img\":item.images.downsized_medium.url, \"title\":item.title , \"id\":item.id } })\n      return newGif\n  }) */\n}","map":{"version":3,"sources":["/Users/josevillalba/Documents/alibrate/frontend/src/services/getLogin.js"],"names":["setting","getLogin","user","password","urlApi","body","console","log","fetch","method","headers","JSON","stringify","then","res","json","response"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,YAApB;AACA,eAAe,SAASC,QAAT,CAAkB;AAACC,EAAAA,IAAD;AAAMC,EAAAA;AAAN,CAAlB,EAAkC;AAC7C,QAAM;AAACC,IAAAA;AAAD,MAASJ,OAAf;AACA,MAAIK,IAAI,GAAC;AAAC,gBAAWH,IAAZ;AAAiBC,IAAAA;AAAjB,GAAT;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SAAOG,KAAK,CAAE,GAAEJ,MAAO,gBAAX,EAA2B;AACnCK,IAAAA,MAAM,EAAC,MAD4B;AAEnCC,IAAAA,OAAO,EAAC;AAAC,sBAAe;AAAhB,KAF2B;AAGnCL,IAAAA,IAAI,EAACM,IAAI,CAACC,SAAL,CAAeP,IAAf;AAH8B,GAA3B,CAAL,CAKNQ,IALM,CAKAC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALP,EAMNF,IANM,CAMAG,QAAQ,IAAI;AACf,WAAOA,QAAP;AACH,GARM,CAAP;AAUA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AAEC","sourcesContent":["import setting from './settings'\nexport default function getLogin({user,password}){\n    const {urlApi}=setting\n    let body={\"username\":user,password}\n    console.log(body)\n    return fetch(`${urlApi}/apiUser/login`,{\n        method:\"POST\",\n        headers:{\"Content-Type\":\"application/json\"},\n        body:JSON.stringify(body)\n    })\n    .then( res => res.json() )\n    .then( response => {\n        return response\n    })\n\n    /* .then( response => {\n        console.log(response)\n        const {data,meta}= response\n        let newGif=[]\n        if(meta && meta.status  && meta.status === 200  && data.length )\n            newGif= data.map(item=> {return {\"img\":item.images.downsized_medium.url, \"title\":item.title , \"id\":item.id } })\n        return newGif\n    }) */\n\n}\n"]},"metadata":{},"sourceType":"module"}