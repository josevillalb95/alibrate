{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport SessionContext from '../context/SessionContext';\nexport default function useBooksBiblioteca() {\n  _s();\n\n  const {\n    userLogin\n  } = useContext(SessionContext);\n  const [categoria, setCategoria] = useState(\"leido\");\n  const [libros, setLibros] = useState([]);\n  useEffect(() => {\n    if (categoria && userLogin[categoria] && userLogin[categoria].length) {\n      let mapBook = userLogin[categoria].map(libro => {\n        return {\n          \"_id\": libro._id,\n          \"categoria\": libro.category ? libro.category[0] : \"\",\n          \"autor\": libro.author,\n          \"titulo\": libro.title,\n          \"img\": libro.bookCover,\n          \"calificacion\": libro.globalRating ? libro.globalRating.rating : 0\n        };\n      });\n      setLibros(mapBook);\n    } else setLibros([]);\n  }, [categoria, userLogin]);\n  return {\n    libros,\n    categoria,\n    setCategoria //mal\n\n  };\n}\n\n_s(useBooksBiblioteca, \"I30SUsc4clXiN7dcoNQbHkc0M98=\");","map":{"version":3,"sources":["/Users/josevillalba/Documents/challenge/alibrate/frontend/src/hooks/useBooksBiblioteca.js"],"names":["useContext","useEffect","useState","SessionContext","useBooksBiblioteca","userLogin","categoria","setCategoria","libros","setLibros","length","mapBook","map","libro","_id","category","author","title","bookCover","globalRating","rating"],"mappings":";;AAAA,SAAQA,UAAR,EAAmBC,SAAnB,EAA6BC,QAA7B,QAA4C,OAA5C;AACA,OAAQC,cAAR,MAA6B,2BAA7B;AACA,eAAe,SAASC,kBAAT,GAA6B;AAAA;;AACxC,QAAM;AAACC,IAAAA;AAAD,MAAYL,UAAU,CAACG,cAAD,CAA5B;AACA,QAAM,CAACG,SAAD,EAAWC,YAAX,IAAyBL,QAAQ,CAAC,OAAD,CAAvC;AACA,QAAM,CAACM,MAAD,EAAQC,SAAR,IAAmBP,QAAQ,CAAC,EAAD,CAAjC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGK,SAAS,IAAID,SAAS,CAACC,SAAD,CAAtB,IAAqCD,SAAS,CAACC,SAAD,CAAT,CAAqBI,MAA7D,EAAqE;AACjE,UAAIC,OAAO,GAACN,SAAS,CAACC,SAAD,CAAT,CAAqBM,GAArB,CAA2BC,KAAD,IAAS;AAC3C,eAAO;AACH,iBAAMA,KAAK,CAACC,GADT;AAEH,uBAAYD,KAAK,CAACE,QAAN,GAAeF,KAAK,CAACE,QAAN,CAAe,CAAf,CAAf,GAAiC,EAF1C;AAGH,mBAAQF,KAAK,CAACG,MAHX;AAIH,oBAASH,KAAK,CAACI,KAJZ;AAKH,iBAAMJ,KAAK,CAACK,SALT;AAMH,0BAAeL,KAAK,CAACM,YAAN,GAAmBN,KAAK,CAACM,YAAN,CAAmBC,MAAtC,GAA6C;AANzD,SAAP;AAQH,OATW,CAAZ;AAUAX,MAAAA,SAAS,CAACE,OAAD,CAAT;AACH,KAZD,MAcIF,SAAS,CAAC,EAAD,CAAT;AACP,GAhBQ,EAgBN,CAACH,SAAD,EAAWD,SAAX,CAhBM,CAAT;AAiBA,SAAO;AACHG,IAAAA,MADG;AAEHF,IAAAA,SAFG;AAGHC,IAAAA,YAHG,CAGU;;AAHV,GAAP;AAMH;;GA3BuBH,kB","sourcesContent":["import {useContext,useEffect,useState} from 'react'\nimport  SessionContext  from '../context/SessionContext'\nexport default function useBooksBiblioteca(){\n    const {userLogin}=useContext(SessionContext);\n    const [categoria,setCategoria]=useState(\"leido\")\n    const [libros,setLibros]=useState([])\n    useEffect(() => {\n        if(categoria && userLogin[categoria] && userLogin[categoria].length ){\n            let mapBook=userLogin[categoria].map( (libro)=>{\n                return {\n                    \"_id\":libro._id,\n                    \"categoria\":libro.category?libro.category[0]:\"\",\n                    \"autor\":libro.author,\n                    \"titulo\":libro.title,\n                    \"img\":libro.bookCover,\n                    \"calificacion\":libro.globalRating?libro.globalRating.rating:0\n                }\n            })\n            setLibros(mapBook)\n        }\n        else\n            setLibros([])\n    }, [categoria,userLogin])\n    return {\n        libros,\n        categoria,\n        setCategoria //mal\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}